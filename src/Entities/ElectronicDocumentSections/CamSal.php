<?php


namespace Mcarral\Sifen\Entities\ElectronicDocumentSections;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Support\Arr;
use Illuminate\Validation\Rule;


/**
 * Class CamSal
 * @property string dDirLocSal
 * @property integer dNumCasSal
 * @property integer cDepSal
 * @property string dDesDepSal
 * @property integer cCiuSal
 * @property string dDesCiuSal
 * @property string dTelSal
 * @package Mcarral\Sifen\Entities\ElectronicDocumentSections
 */
class CamSal extends ElectronicDocumentSectionBase {
    protected $attributes = [
        'dDirLocSal' => null, 'dNumCasSal' => null, 'dComp1Sal' => null, 'dComp2Sal' => null, 'cDepSal' => null,
        'dDesDepSal' => null, 'cDisSal' => null, 'dDesDisSal' => null, 'cCiuSal' => null, 'dDesCiuSal' => null,
        'dTelSal' => null,
    ];

    public function defaults()
    {
        $this->dNumCasSal = 0; // sin numero

        return parent::defaults(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return array_merge(parent::rules(), [
            'dDirLocSal'     => ['required', 'string', 'between:1,255'],
            'dNumCasSal'     => ['required', 'numeric', 'digits_between:1,6'],
            'cDepSal'        => ['required', 'integer', 'digits_between:1,2', Rule::in(array_keys($this->ekuatia->config('encodings.departments')))],
            'dDesDepSal'     => ['required', 'string', 'between:6,16', Rule::in(array_column($this->ekuatia->config('encodings.departments'), 'name'))],
            'cCiuSal'        => ['required', 'integer', 'digits_between:1,5', Rule::in(array_keys($this->ekuatia->config('encodings.locations')))],
            'dDesCiuSal'     => ['required', 'string', 'between:1,30', Rule::in(array_column($this->ekuatia->config('encodings.locations'), 'name'))],
            'dTelSal'        => ['string', 'between:6,15'],
        ]);
    }

    public function rulesAttributes()
    {
        return array_merge(parent::rulesAttributes(), [
            'dDirLocSal'    => 'Dirección del local de salida',
            'dNumCasSal'    => 'Número de casa de salida',
            'cDepSal'       => 'Código del departamento del local de salida',
            'dDesDepSal'    => 'Descripción del departamento del local de salida',
            'cCiuSal'       => 'Código de la ciudad del local de salida',
            'dDesCiuSal'    => 'Descripción de ciudad del local de salida',
            'dTelSal'       => 'Teléfono de contacto del local de salida',
        ]); // TODO: Change the autogenerated stub
    }

    public function setCDepSalAttribute($value)
    {
        if ( ! is_null($value)) $value = ekuatia()->equivalence('Province', $value, $value)->code_converted;
        $this->attributes['cDepSal'] = $value ?: '';
    }

    public function getCDepSalAttribute()
    {
        $value = Arr::get($this->attributes, 'cDepSal');
        if (! is_null($value)) return $value;

        $city = $this->ekuatia->config('encodings.locations.' . $this->cCiuSal);
        return ( is_null($city)) ? $city : $city['department'];
    }

    public function getDDesDepSalAttribute()
    {
        if ( isset($this->attributes['dDesDepSal'])) return $this->attributes['dDesDepSal'];

        return ( ! is_null($this->cDepSal)) ? Arr::get($this->ekuatia->config('encodings.departments'), $this->cDepSal . ".name") : '';
    }

    public function setCCiuSalAttribute($value)
    {
        if ( ! is_null($value)) $value = ekuatia()->equivalence('City', $value, $value)->code_converted;
        $this->attributes['cCiuSal'] = $value;
    }

    public function getDDesCiuSalAttribute()
    {
        if ( isset($this->attributes['dDesCiuSal'])) return $this->attributes['dDesCiuSal'];

        return ( ! is_null($this->cCiuSal)) ? Arr::get($this->ekuatia->config('encodings.locations'), $this->cCiuSal . ".name") : null;
    }

    public function setDTelSalAttribute($value)
    {
        $this->attributes['dTelSal'] = $this->extractPhoneNumber($value);
    }
}